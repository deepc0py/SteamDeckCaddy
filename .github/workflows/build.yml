name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  FLUTTER_VERSION: '3.22.2'

jobs:
  test-libwarpdeck:
    name: Test libwarpdeck
    runs-on: ubuntu-22.04  # Ubuntu 20.04 retiring April 2025
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          build-essential \
          pkg-config \
          libssl-dev \
          libavahi-client-dev \
          valgrind

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 'a42af01b72c28a8e1d7b48107b33e4f286a55ef6'

    - name: Install dependencies with vcpkg
      run: |
        $VCPKG_ROOT/vcpkg install boost-asio openssl nlohmann-json catch2

    - name: Build and test libwarpdeck
      run: |
        cd libwarpdeck
        rm -rf build
        rm -rf build
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Debug \
              -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
              -DBUILD_TESTS=ON \
              ..
        make -j$(nproc)
        
        # Run tests if they exist
        if [ -f "./test_libwarpdeck" ]; then
          ./test_libwarpdeck
        fi

  test-cli:
    name: Test CLI
    runs-on: ubuntu-22.04  # Ubuntu 20.04 retiring April 2025
    needs: test-libwarpdeck
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          build-essential \
          pkg-config \
          libssl-dev \
          libavahi-client-dev

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 'a42af01b72c28a8e1d7b48107b33e4f286a55ef6'

    - name: Install dependencies with vcpkg
      run: |
        $VCPKG_ROOT/vcpkg install boost-asio openssl nlohmann-json

    - name: Build libwarpdeck
      run: |
        cd libwarpdeck
        rm -rf build
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
              ..
        make -j$(nproc)
        cd ../..

    - name: Build CLI
      run: |
        cd warpdeck-cli
        rm -rf build
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
              ..
        make -j$(nproc)

    - name: Test CLI basic functionality
      run: |
        cd warpdeck-cli/build
        # Test help command
        ./warpdeck --help || echo "Help command test completed"
        
        # Test config command
        ./warpdeck config --set-name "CI Test Device" || echo "Config command test completed"

  test-flutter:
    name: Test Flutter GUI
    runs-on: ubuntu-22.04  # Ubuntu 20.04 retiring April 2025
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          build-essential \
          pkg-config \
          libssl-dev \
          libavahi-client-dev \
          libgtk-3-dev \
          ninja-build \
          clang \
          libayatana-appindicator3-dev

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 'a42af01b72c28a8e1d7b48107b33e4f286a55ef6'

    - name: Install dependencies with vcpkg
      run: |
        $VCPKG_ROOT/vcpkg install boost-asio openssl nlohmann-json

    - name: Build libwarpdeck
      run: |
        cd libwarpdeck
        rm -rf build
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
              ..
        make -j$(nproc)
        cd ../..

    - name: Test Flutter app
      run: |
        cd warpdeck-flutter/warpdeck_gui
        flutter pub get
        
        # Run dart analysis
        dart analyze
        
        # Run tests if they exist (skip in CI as they require native library)
        # if [ -d "test" ]; then
        #   flutter test
        # fi
        
        # Generate FFI bindings
        dart run build_runner build --delete-conflicting-outputs
        
        # Test that the app builds successfully
        flutter build linux --release

  build-quick:
    name: Quick Build Check
    runs-on: ubuntu-22.04  # Ubuntu 20.04 retiring April 2025
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          build-essential \
          pkg-config \
          libssl-dev \
          libavahi-client-dev \
          libgtk-3-dev \
          ninja-build \
          clang \
          libayatana-appindicator3-dev

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 'a42af01b72c28a8e1d7b48107b33e4f286a55ef6'

    - name: Install dependencies with vcpkg
      run: |
        $VCPKG_ROOT/vcpkg install boost-asio openssl nlohmann-json

    - name: Quick build test
      run: |
        # Build libwarpdeck
        cd libwarpdeck
        rm -rf build
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
              ..
        make -j$(nproc)
        cd ../..
        
        # Build CLI
        cd warpdeck-cli
        rm -rf build
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
              ..
        make -j$(nproc)
        cd ../..
        
        # Test Flutter dependencies and analysis
        cd warpdeck-flutter/warpdeck_gui
        flutter pub get
        dart analyze
        dart run build_runner build --delete-conflicting-outputs

  lint:
    name: Code Quality
    runs-on: ubuntu-22.04  # Ubuntu 20.04 retiring April 2025
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Flutter Analysis
      continue-on-error: true
      run: |
        cd warpdeck-flutter/warpdeck_gui
        flutter pub get
        dart format --set-exit-if-changed . || echo "⚠️ Code formatting issues found"
        dart analyze --fatal-warnings || echo "⚠️ Analysis warnings found"

    - name: Check for TODO/FIXME comments
      run: |
        echo "Checking for TODO/FIXME comments..."
        if grep -r "TODO\|FIXME" --include="*.dart" --include="*.cpp" --include="*.h" . | grep -v ".github"; then
          echo "⚠️  Found TODO/FIXME comments in code"
          exit 0  # Don't fail the build, just warn
        else
          echo "✅ No TODO/FIXME comments found"
        fi