name: Build WarpDeck GUI

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.2'
        channel: 'stable'
    
    - name: Install dependencies
      run: |
        flutter pub get
        dart run build_runner build --delete-conflicting-outputs
    
    - name: Build libwarpdeck
      run: |
        cd ../../libwarpdeck
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make -j$(sysctl -n hw.ncpu)
    
    - name: Build macOS app
      run: chmod +x build_scripts/build_macos.sh && ./build_scripts/build_macos.sh
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: warpdeck-macos
        path: |
          build/macos/Build/Products/Release/WarpDeck.app
          build/macos/Build/Products/Release/*.dmg

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.2'
        channel: 'stable'
    
    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang cmake ninja-build pkg-config libgtk-3-dev \
          liblzma-dev libstdc++-12-dev
    
    - name: Install dependencies
      run: |
        flutter pub get
        dart run build_runner build --delete-conflicting-outputs
    
    - name: Build libwarpdeck
      run: |
        cd ../../libwarpdeck
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make -j$(nproc)
    
    - name: Build Linux app
      run: chmod +x build_scripts/build_linux.sh && ./build_scripts/build_linux.sh
    
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: warpdeck-linux
        path: |
          build/linux/x64/release/bundle
          build/linux/WarpDeck.AppDir

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: WarpDeck ${{ github.ref }}
        draft: false
        prerelease: false